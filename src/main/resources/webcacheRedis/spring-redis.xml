<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/cache  http://
">

    <!--利用redis数据库，实现web缓存-->
    <!--1、引入redis配置文件,context:property-placeholder标签只能有一个，需在前面配置多个路径就行-->
    <!--<context:property-placeholder location="classpath:redis.properties"/>-->
    <!--2、把Jedis纳入spring管理-->
    <!--2.1、配置连接池-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxActive" value="${max_active}"/>
        <property name="maxWait" value="${max_wait}"/>
        <property name="maxIdle" value="${max_idel}"/>
        <property name="testOnBorrow" value="${test_on_borrow}"/>
    </bean>
    <!--2.2、创建Jedis连接工厂对象用于获取数据库连接-->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${addr}"/>
        <property name="port" value="${port}"/>
        <property name="password" value="${auth}"/>
        <property name="timeout" value="${timeout}"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>
    <!--2.3、创建redisTemplate对象，用于直接操作数据库-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <!--mybatis二级缓存：使用RedisCatch.jedisConnectionFactory的静态注入，从而使mybaits实现第三方缓存-->
    <!--<bean id="redisCatchTransfer" class="com.webcacheredis.util.RedisCatchTransfer">
        <property name="jedisConnectionFactory" ref="connectionFactory"/>
    </bean>-->

</beans>